@using Cinema.ViewModel
@model ResetPasswordVM

@{
    ViewData["Title"] = "Reset Password";
}
<style>
    .otp-inputs {
        display: flex;
        gap: 10px;
        justify-content: center;
    }

    .otp-box {
        width: 40px;
        height: 45px;
        font-size: 1.5rem;
        text-align: center;
        border: 1px solid #333;
        border-radius: 5px;
        background-color: #1f1f1f;
        color: white;
        outline: none;
        transition: 0.3s;
    }

        .otp-box:focus {
            border-color: #1abc9c;
            box-shadow: 0 0 10px rgba(26, 188, 156, 0.25);
        }

 
    .card-custom {
        background: rgba(20, 34, 51, 0.9);
        backdrop-filter: blur(10px);
        padding: 40px;
        border-radius: 16px;
        box-shadow: 0 8px 32px rgba(26, 188, 156, 0.25);
        max-width: 420px;
        margin: 20px auto;
        color: #fff;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .link-forgot {
        color: #1abc9c;
        font-size: 0.9rem;
        text-decoration: none;
        transition: all 0.3s ease;
    }

        .link-forgot:hover {
            text-decoration: underline;
            color: #16a085;
        }


    .card-custom h3 {
        text-align: center;
        margin-bottom: 25px;
        font-weight: 600;
        color: #1abc9c;
    }

    .form-control {
        background-color: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.1);
        color: #fff !important;
        padding: 12px;
        border-radius: 8px;
        transition: 0.3s ease;
    }

        .form-control:focus {
            border-color: #1abc9c;
            box-shadow: 0 0 8px rgba(26, 188, 156, 0.6);
            background-color: rgba(255, 255, 255, 0.07);
            color: #fff !important;
        }

        .form-control::placeholder {
            color: #ccc;
        }

    input:-webkit-autofill {
        -webkit-text-fill-color: #fff !important;
        transition: background-color 5000s ease-in-out 0s;
    }

    .btn-custom {
        background: #1abc9c;
        border: none;
        padding: 12px;
        width: 100%;
        color: #fff;
        font-weight: bold;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(26, 188, 156, 0.4);
        transition: all 0.3s ease;
    }

        .btn-custom:hover {
            background: #16a085;
            box-shadow: 0 6px 20px rgba(26, 188, 156, 0.6);
        }

    .form-check-label a {
        color: #1abc9c;
    }

    .form-check-input {
        background-color: transparent;
        border: 1px solid #1abc9c;
    }

    .text-danger {
        color: #e74c3c !important;
        font-size: 0.875rem;
    }

    .text-center a {
        color: #1abc9c;
    }

        .text-center a:hover {
            text-decoration: underline;
        }

    .card-custom input,
    .card-custom label,
    .card-custom a,
    .card-custom .form-check-label {
        color: #fff;
    }



</style>
<div class="card-custom">
    <h3>Reset Password</h3>
    <hr />

    <form asp-action="ResetPassword" method="post" id="resetForm">
        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
        <input type="hidden" name="UserId" value="@Model.UserId" />
        <label class="form-label text-light">OTP</label>
        <div class="otp-inputs mb-3">
            @for (int i = 0; i < 6; i++)
            {
                <input type="text" maxlength="1" class="otp-box" inputmode="numeric" pattern="[0-9]*" />
            }
            <input type="hidden" asp-for="OTP" id="OTP" />
            <span asp-validation-for="OTP" class="text-danger d-block mt-1"></span>
        </div>

        <div class="mb-3">
            <input asp-for="Password" type="password" class="form-control" placeholder="New Password" />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <input asp-for="ConfirmPassWord" type="password" class="form-control" placeholder="Confirm Password" />
            <span asp-validation-for="ConfirmPassWord" class="text-danger"></span>
        </div>

        <div class="d-grid mt-3">
            <button type="submit" class="btn btn-custom">Reset Password</button>
        </div>
    </form>

    <div class="mt-3 text-center">
        <a asp-action="Login" style="color:#1abc9c;">Back to Login</a>
    </div>
</div>

@section Scripts {
    <script>
        const boxes = document.querySelectorAll(".otp-box");
        const otpHidden = document.getElementById("OTP");

        boxes.forEach((box, index) => {
            box.addEventListener("input", () => {
                if (box.value.length === 1 && index < boxes.length - 1) {
                    boxes[index + 1].focus();
                }
                updateOTP();
            });

            box.addEventListener("keydown", (e) => {
                if (e.key === "Backspace" && box.value === "" && index > 0) {
                    boxes[index - 1].focus();
                }
            });
        });

        function updateOTP() {
            otpHidden.value = Array.from(boxes).map(b => b.value).join("");
        }
    </script>

    @if (TempData["success-notification"] is not null)
    {
        <script>
            toastr.success('@TempData["success-notification"]');
        </script>
    }

    @if (TempData["error-notification"] is not null)
    {
        <script>
            toastr.error('@TempData["error-notification"]');
        </script>
    }

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
